declare const _default: {
    SignedBalance: {
        _enum: {
            Negative: string;
            Positive: string;
        };
    };
    AssetType: {
        _enum: string[];
    };
    XRC20Selector: {
        _enum: string[];
    };
    OrderType: {
        _enum: string[];
    };
    Side: {
        _enum: string[];
    };
    String: string;
    Memo: string;
    AssetInfo: {
        token: string;
        tokenName: string;
        chain: string;
        precision: string;
        desc: string;
    };
    BTCHeaderInfo: {
        header: string;
        height: string;
        confirmed: string;
        txidList: string;
    };
    BTCTxInfo: {
        rawTx: string;
        txType: string;
        height: string;
    };
    BTCParams: {
        maxBits: string;
        blockMaxFuture: string;
        targetTimespanSeconds: string;
        targetSpacingSeconds: string;
        retargetingFactor: string;
        retargetingInterval: string;
        minTimespan: string;
        maxTimespan: string;
    };
    TradingPairProfile: {
        id: string;
        currencyPair: string;
        pipPrecision: string;
        tickPrecision: string;
        online: string;
    };
    Order: {
        props: string;
        status: string;
        remaining: string;
        executedIndices: string;
        alreadyFilled: string;
        lastUpdateAt: string;
    };
    TradingPairInfo: {
        latestPrice: string;
        lastUpdated: string;
    };
    OrderExecutedInfo: {
        tradingHistoryIdx: string;
        pairId: string;
        price: string;
        maker: string;
        taker: string;
        makerOrderId: string;
        takerOrderId: string;
        turnover: string;
        executedAt: string;
    };
    AssetLedger: {
        lastTotalMiningWeight: string;
        lastTotalMiningWeightUpdate: string;
    };
    MinerLedger: {
        lastMiningWeight: string;
        lastMiningWeightUpdate: string;
        lastClaim: string;
    };
    ClaimRestriction: {
        stakingRequirement: string;
        frequencyLimit: string;
    };
    BondRequirement: {
        selfBonded: string;
        total: string;
    };
    ValidatorLedger: {
        total: string;
        lastTotalVoteWeight: string;
        lastTotalVoteWeightUpdate: string;
    };
    NominatorLedger: {
        nomination: string;
        lastVoteWeight: string;
        lastVoteWeightUpdate: string;
    };
    ValidatorProfile: {
        registeredAt: string;
        isChilled: string;
        lastChilled: string;
    };
    NominatorProfile: {
        lastRebond: string;
        unbondedChunks: string;
    };
    GlobalDistribution: {
        treasury: string;
        mining: string;
    };
    MiningDistribution: {
        asset: string;
        staking: string;
    };
    UnbondedIndex: string;
    Desc: string;
    Token: string;
    AddrStr: string;
    Selector: string;
    HandicapInfo: string;
    Price: string;
    OrderId: string;
    TradingPairId: string;
    TradingHistoryIndex: string;
    PriceFluctuation: string;
    FixedAssetPower: string;
    StakingRequirement: string;
    Precision: string;
    BTCTxType: {
        _enum: string[];
    };
    CurrencyPair: {
        base: string;
        quote: string;
    };
    OrderStatus: {
        _enum: string[];
    };
    MiningWeight: string;
    WeightType: string;
    AssetId: string;
    Chain: {
        _enum: string[];
    };
    AssetRestriction: {
        _enum: string[];
    };
    AssetRestrictions: {
        mask: string;
    };
    BtcAddress: {
        hash: string;
    };
    BTCHeader: {
        version: string;
        previousHeaderHash: string;
        merkleRootHash: string;
        time: string;
        bits: string;
        nonce: string;
    };
    BTCNetwork: {
        _enum: string[];
    };
    NetworkType: {
        _enum: string[];
    };
    OrderInfo: string;
    AssetInfoForRpc: {
        token: string;
        tokenName: string;
        chain: string;
        precision: string;
        desc: string;
    };
    Handicap: {
        highestBid: string;
        lowestOffer: string;
    };
    OrderProperty: {
        id: string;
        side: string;
        price: string;
        amount: string;
        pairId: string;
        submitter: string;
        orderType: string;
        createdAt: string;
    };
    TotalAssetInfoForRpc: {
        info: string;
        balance: string;
        isOnline: string;
        restrictions: string;
    };
    OutPoint: {
        hash: string;
        index: string;
    };
    TransactionInput: {
        previous_output: string;
        script_sig: string;
        sequence: string;
        scriptWitness: string;
    };
    TransactionOutput: {
        value: string;
        scriptPubkey: string;
    };
    BTCTransaction: {
        version: string;
        inputs: string;
        outputs: string;
        lock_time: string;
    };
    BTCAddrType: {
        _enum: string[];
    };
    Unbonded: {
        lockedUntil: string;
        value: string;
    };
    WithdrawalState: {
        _enum: string[];
    };
    WithdrawalRecord: {
        assetId: string;
        applicant: string;
        balance: string;
        addr: string;
        ext: string;
        height: string;
    };
    WithdrawalLimit: {
        minimalWithdrawal: string;
        fee: string;
    };
    TrusteeInfoConfig: {
        minTrusteeCount: string;
        maxTrusteeCount: string;
    };
    GenericTrusteeIntentionProps: {
        about: string;
        hotEntity: string;
        coldEntity: string;
    };
    GenericTrusteeSessionInfo: {
        trusteeList: string;
        threshold: string;
        hotAddress: string;
        coldAddress: string;
    };
    BtcTrusteeType: string;
    BtcTrusteeAddrInfo: {
        addr: string;
        redeemScript: string;
    };
    BtcTrusteeIntentionProps: {
        about: string;
        hotEntity: string;
        coldEntity: string;
    };
    BtcTrusteeSessionInfo: {
        trusteeList: string;
        threshold: string;
        hotAddress: string;
        coldAddress: string;
    };
    BtcTxType: {
        _enum: string[];
    };
    BtcHeaderIndex: {
        hash: string;
        height: string;
    };
    BtcTxResult: {
        _enum: string[];
    };
    BtcTxState: {
        result: string;
        txType: string;
    };
    BtcDepositCache: {
        txid: string;
        balance: string;
    };
    BtcVoteResult: {
        _enum: string[];
    };
    BtcWithdrawalProposal: {
        sigState: string;
        withdrawalIdList: string;
        tx: string;
        trusteeList: string;
    };
    MiningPower: string;
    AddressHash: string;
    Address: string;
    ValidatorInfo: {
        account: string;
        registeredAt: string;
        isChilled: string;
        lastChilled: string;
        total: string;
        lastTotalVoteWeight: string;
        lastTotalVoteWeightUpdate: string;
        isValidating: string;
        selfBonded: string;
        rewardPotAccount: string;
        rewardPotBalance: string;
    };
    RpcBalance: string;
    RpcWeightType: string;
};
export default _default;
