"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _testingPairs = _interopRequireDefault(require("@chainx-v2/keyring/testingPairs"));

var _index = require("./index");

// Copyright 2017-2020 @chainx-v2/crypto authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
describe('addressEq', () => {
  it('returns false with non-equal', () => {
    expect((0, _index.addressEq)('5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY', '5EnxxUmEbw8DkENKiYuZ1DwQuMoB2UWEQJZZXrTsxoz7SpgG')).toEqual(false);
  });
  it('returns true for equal, matching prefix', () => {
    expect((0, _index.addressEq)('5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY', '5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY')).toEqual(true);
  });
  it('returns true for equal, non-matching prefix', () => {
    expect((0, _index.addressEq)('5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY', '7sL6eNJj5ZGV5cn3hhV2deRUsivXfBfMH76wCALCqWj1EKzv')).toEqual(true);
  });
  it('returns true for equal, address vs publicKey', () => {
    const keyring = (0, _testingPairs.default)({
      type: 'sr25519'
    });
    expect((0, _index.addressEq)('5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY', keyring.alice.publicKey)).toEqual(true);
  });
});